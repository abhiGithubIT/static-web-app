pipeline {
    agent any
     environment {
        Git_CREDENTIALS_ID = 'git-credentials'
        NGINX_CREDENTIALS_ID = 'nginx'
        NGINX_SERVER = '13.127.200.176'
        SSH_USER = 'ec2-user'
        
    }

    stages {
        stage('checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Deploy to Nginx server') {
            steps {
                sshagent(["${NGINX_CREDENTIALS_ID}"]) {
                    sh """
                        echo 'Deploying to Nginx server...'
                        ssh -o StrictHostKeyChecking=no ${SSH_USER}@${NGINX_SERVER} sudo  rm -rf /usr/share/nginx/html/*
                         sudo  scp -o StrictHostKeyChecking=no -r * ${SSH_USER}@${NGINX_SERVER}:/usr/share/nginx/html/
                        echo 'Restarting Nginx service...'
                        sleep 15 
                        ssh  ${SSH_USER}@${NGINX_SERVER} sudo systemctl restart nginx
                         """
                }
            }
        }
    }

    post {
            success {
            emailext (
                subject: "Jenkins Job SUCCESS: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: '''<p>Build Succeeded!</p>
                         <p><b>Job:</b> ${env.JOB_NAME}</p>
                         <p><b>Build #:</b> ${env.BUILD_NUMBER}</p>
                         <p><b>URL:</b> <a href='${env.BUILD_URL}'>${env.BUILD_URL}</a></p>''',
                to: "abhiabhishek299@gmail.com"
            )
        }
    
     failure {
            emailext (
                subject: "Jenkins Job FAILURE: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: '''<p>Build Failed!</p>
                         <p><b>Job:</b> ${env.JOB_NAME}</p>
                         <p><b>Build #:</b> ${env.BUILD_NUMBER}</p>
                         <p><b>URL:</b> <a href='${env.BUILD_URL}'>${env.BUILD_URL}</a></p>''',
                to: "abhiabhishek299@gmail.com"
            )
        }
        always {
            cleanWs()
        }
   }
}
